{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Blockchain\\\\NFT-DAPP\\\\src\\\\components\\\\Mainbody.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AITU from '../AITU.json';\nimport { ethers, BigNumber } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mainbody() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const contractAdress = '0xf53D69a470B88767503B90B6aD7fd92b29389C3d';\n  let provider;\n  if (typeof window.ethereum !== 'undefined') {\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n  } else {\n    provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/113c2db2a8e24cb480fd49ce53892560');\n  }\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(contractAdress, AITU.abi, signer);\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setConnected(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert('Install Metamask');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mx-auto p-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AITU NFT Development\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 p-5\",\n      children: connected ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-lg\",\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-lg p-5 rounded-5\",\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 p-5\",\n      children: connected ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Minting Available!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connect MetaMask!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Mainbody, \"SzHkib7IVjs+EtyR66rvTZzlr5k=\");\n_c = Mainbody;\nexport default Mainbody;\nvar _c;\n$RefreshReg$(_c, \"Mainbody\");","map":{"version":3,"names":["React","useState","AITU","ethers","BigNumber","jsxDEV","_jsxDEV","Mainbody","_s","connected","setConnected","quantity","setQuantity","error","setError","loading","setLoading","contractAdress","provider","window","ethereum","providers","Web3Provider","JsonRpcProvider","signer","getSigner","contract","Contract","abi","connectWallet","request","method","address","getAddress","e","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Coding/Blockchain/NFT-DAPP/src/components/Mainbody.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport AITU from '../AITU.json';\r\nimport { ethers, BigNumber } from \"ethers\";\r\n\r\nfunction Mainbody() {\r\n    const [connected, setConnected] = useState(false);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const contractAdress = '0xf53D69a470B88767503B90B6aD7fd92b29389C3d';\r\n    let provider;\r\n    if(typeof window.ethereum !== 'undefined'){\r\n        provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    } else {\r\n        provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/113c2db2a8e24cb480fd49ce53892560');\r\n    }\r\n\r\n    const signer = provider.getSigner();\r\n    const contract = new ethers.Contract(contractAdress, AITU.abi, signer)\r\n\r\n    async function connectWallet(){\r\n        if(window.ethereum){\r\n            try{\r\n                await window.ethereum.request({ method: \"eth_requestAccounts\"});\r\n                setConnected(true);\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const address = await signer.getAddress();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        } else {\r\n            alert('Install Metamask')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mx-auto p-5 text-center\">\r\n            <h2>AITU NFT Development</h2>\r\n            <div className=\"mt-5 p-5\">\r\n                {connected?\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\">Mint</button>\r\n                    :\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg p-5 rounded-5\">Connect</button>\r\n                }\r\n            </div>\r\n            <div className=\"mt-5 p-5\">\r\n                {connected?\r\n                    <h1>Minting Available!</h1>\r\n                    :\r\n                    <h1>Connect MetaMask!</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mainbody;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}