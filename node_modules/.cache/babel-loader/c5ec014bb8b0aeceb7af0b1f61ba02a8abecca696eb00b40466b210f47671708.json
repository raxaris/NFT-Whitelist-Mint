{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Blockchain\\\\NFT-DAPP\\\\src\\\\components\\\\Mainbody.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/mainbody.css';\nimport AITU from '../AITU.json';\nimport { ethers, BigNumber } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mainbody() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const maxMinted = 500;\n  const displayTokens = `${totalMinted}/${maxMinted}`;\n  const displayStatus = totalMinted === maxMinted ? 'Sold out' : displayTokens;\n  async function getTotalTokens() {\n    const totalTokens = await contract.getTotalTokensMinted();\n    return totalTokens.toNumber();\n  }\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      const newTotalMinted = await contract.getTotalTokensMinted();\n      setTotalMinted(newTotalMinted);\n    }, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const contractAdress = '0xf53D69a470B88767503B90B6aD7fd92b29389C3d';\n  let provider;\n  if (typeof window.ethereum !== 'undefined') {\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n  } else {\n    provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/113c2db2a8e24cb480fd49ce53892560');\n  }\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(contractAdress, AITU.abi, signer);\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setConnected(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert('Install Metamask');\n    }\n  }\n  const mintFunction = async () => {\n    try {\n      setLoading(true);\n      const connection = contract.connect(signer);\n      const addr = connection.address;\n      const response = await contract.mint(BigNumber.from(quantity), {\n        value: ethers.utils.parseEther(('0.005' * quantity).toString())\n      });\n      console.log(\"response: \", response);\n    } catch (error) {\n      const errorMessage = error.message || '';\n      if (errorMessage.includes(\"user rejected transaction\")) {\n        setError(\"You rejected transaction\");\n      } else {\n        const match = errorMessage.match(/reason=\"execution reverted: ([^\"]*)\"/);\n        if (match && match[1]) {\n          setError(\"Something get wrong...\");\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mx-auto p-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AITU NFT Development\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 p-5\",\n      children: connected ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: mintFunction,\n        className: \"btn btn-primary btn-lg px-5 mintbutton\",\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: connectWallet,\n        className: \"btn btn-primary btn-lg px-5 connectButton\",\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5 p-5\",\n      children: connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Minting Available!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: displayStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connect MetaMask!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Mainbody, \"LFBEC47CdbBCXgVEFJ7t8buq4pc=\");\n_c = Mainbody;\nexport default Mainbody;\nvar _c;\n$RefreshReg$(_c, \"Mainbody\");","map":{"version":3,"names":["React","useState","useEffect","AITU","ethers","BigNumber","jsxDEV","_jsxDEV","Mainbody","_s","connected","setConnected","quantity","setQuantity","error","setError","loading","setLoading","totalMinted","setTotalMinted","maxMinted","displayTokens","displayStatus","getTotalTokens","totalTokens","contract","getTotalTokensMinted","toNumber","intervalId","setInterval","newTotalMinted","clearInterval","contractAdress","provider","window","ethereum","providers","Web3Provider","JsonRpcProvider","signer","getSigner","Contract","abi","connectWallet","request","method","address","getAddress","e","console","log","alert","mintFunction","connection","connect","addr","response","mint","from","value","utils","parseEther","toString","errorMessage","message","includes","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Coding/Blockchain/NFT-DAPP/src/components/Mainbody.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport '../styles/mainbody.css';\r\nimport AITU from '../AITU.json';\r\nimport { ethers, BigNumber } from \"ethers\";\r\n\r\nfunction Mainbody() {\r\n    const [connected, setConnected] = useState(false);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalMinted, setTotalMinted] = useState(0);\r\n    const maxMinted = 500;\r\n    const displayTokens = `${totalMinted}/${maxMinted}`;\r\n    const displayStatus = totalMinted === maxMinted ? 'Sold out' : displayTokens;\r\n\r\n    async function getTotalTokens(){\r\n        const totalTokens = await contract.getTotalTokensMinted();\r\n        return totalTokens.toNumber();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(async() => {\r\n            const newTotalMinted = await contract.getTotalTokensMinted();\r\n            setTotalMinted(newTotalMinted);\r\n        }, 3000);\r\n        return () => clearInterval(intervalId)\r\n    },[])\r\n\r\n    const contractAdress = '0xf53D69a470B88767503B90B6aD7fd92b29389C3d';\r\n    let provider;\r\n    if(typeof window.ethereum !== 'undefined'){\r\n        provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    } else {\r\n        provider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.io/v3/113c2db2a8e24cb480fd49ce53892560');\r\n    }\r\n\r\n    const signer = provider.getSigner();\r\n    const contract = new ethers.Contract(contractAdress, AITU.abi, signer)\r\n\r\n    async function connectWallet(){\r\n        if (window.ethereum){\r\n            try{\r\n                await window.ethereum.request({ method: \"eth_requestAccounts\"});\r\n                setConnected(true);\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const address = await signer.getAddress();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        } else {\r\n            alert('Install Metamask');\r\n        }\r\n    }\r\n\r\n    const mintFunction = async () => {\r\n        try{\r\n            setLoading(true);\r\n            const connection = contract.connect(signer);\r\n            const addr = connection.address;\r\n            const response = await contract.mint(BigNumber.from(quantity),{\r\n                value: ethers.utils.parseEther(('0.005' * quantity).toString()),\r\n            });\r\n            console.log(\"response: \", response);\r\n\r\n        } catch (error) {\r\n            const errorMessage = error.message || '';\r\n            if (errorMessage.includes(\"user rejected transaction\")) {\r\n                setError(\"You rejected transaction\")\r\n            } else {\r\n                const match = errorMessage.match(/reason=\"execution reverted: ([^\"]*)\"/);\r\n                if (match && match[1]) {\r\n                    setError(\"Something get wrong...\");\r\n                }\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mx-auto p-5 text-center\">\r\n            <h2>AITU NFT Development</h2>\r\n            <div className=\"mt-5 p-5\">\r\n                {connected?\r\n                    <button type=\"button\" onClick={mintFunction} className=\"btn btn-primary btn-lg px-5 mintbutton\">Mint</button>\r\n                    :\r\n                    <button type=\"button\" onClick={connectWallet} className=\"btn btn-primary btn-lg px-5 connectButton\">Connect</button>\r\n                }\r\n            </div>\r\n            <div className=\"mt-5 p-5\">\r\n                {connected?\r\n                    <div className='connected'>\r\n                        <h2>Minting Available!</h2>\r\n                        <h3>{displayStatus}</h3>\r\n                    </div>\r\n                    : <h2>Connect MetaMask!</h2>\r\n                }\r\n            </div>\r\n            <div>\r\n                <h3 className='error'>{error}</h3>\r\n                <div>{loading ? <h3>{loading}</h3> : ''}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mainbody;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}