{"ast":null,"code":"\"use strict\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n  if (isCrowdsaleWallet(json)) {\n    if (progressCallback) {\n      progressCallback(0);\n    }\n    const account = decryptCrowdsale(json, password);\n    if (progressCallback) {\n      progressCallback(1);\n    }\n    return Promise.resolve(account);\n  }\n  if (isKeystoreWallet(json)) {\n    return decryptKeystore(json, password, progressCallback);\n  }\n  return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n  if (isCrowdsaleWallet(json)) {\n    return decryptCrowdsale(json, password);\n  }\n  if (isKeystoreWallet(json)) {\n    return decryptKeystoreSync(json, password);\n  }\n  throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync };","map":{"version":3,"names":["decrypt","decryptCrowdsale","getJsonWalletAddress","isCrowdsaleWallet","isKeystoreWallet","decryptKeystore","decryptSync","decryptKeystoreSync","encrypt","encryptKeystore","decryptJsonWallet","json","password","progressCallback","account","Promise","resolve","reject","Error","decryptJsonWalletSync"],"sources":["D:\\Coding\\BlockChain\\Final\\Project\\node_modules\\@ethersproject\\json-wallets\\src.ts\\index.ts"],"sourcesContent":["\"use strict\";\r\n\r\nimport { Bytes } from \"@ethersproject/bytes\";\r\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\r\n\r\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\r\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\r\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\r\n\r\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\r\n    if (isCrowdsaleWallet(json)) {\r\n        if (progressCallback) { progressCallback(0); }\r\n        const account = decryptCrowdsale(json, password)\r\n        if (progressCallback) { progressCallback(1); }\r\n        return Promise.resolve(account);\r\n    }\r\n\r\n    if (isKeystoreWallet(json)) {\r\n        return decryptKeystore(json, password, progressCallback);\r\n    }\r\n\r\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\r\n}\r\n\r\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\r\n    if (isCrowdsaleWallet(json)) {\r\n        return decryptCrowdsale(json, password)\r\n    }\r\n\r\n    if (isKeystoreWallet(json)) {\r\n        return decryptKeystoreSync(json, password);\r\n    }\r\n\r\n    throw new Error(\"invalid JSON wallet\");\r\n}\r\n\r\nexport {\r\n    decryptCrowdsale,\r\n\r\n    decryptKeystore,\r\n    decryptKeystoreSync,\r\n    encryptKeystore,\r\n\r\n    isCrowdsaleWallet,\r\n    isKeystoreWallet,\r\n    getJsonWalletAddress,\r\n\r\n    decryptJsonWallet,\r\n    decryptJsonWalletSync,\r\n\r\n    ProgressCallback,\r\n    EncryptOptions,\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAKZ,SAASA,OAAO,IAAIC,gBAAgB,QAAQ,aAAa;AACzD,SAASC,oBAAoB,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAQ,WAAW;AACrF,SAASJ,OAAO,IAAIK,eAAe,EAAEC,WAAW,IAAIC,mBAAmB,EAAEC,OAAO,IAAIC,eAAe,QAA0C,YAAY;AAEzJ,SAASC,iBAAiBA,CAACC,IAAY,EAAEC,QAAwB,EAAEC,gBAAmC;EAClG,IAAIV,iBAAiB,CAACQ,IAAI,CAAC,EAAE;IACzB,IAAIE,gBAAgB,EAAE;MAAEA,gBAAgB,CAAC,CAAC,CAAC;;IAC3C,MAAMC,OAAO,GAAGb,gBAAgB,CAACU,IAAI,EAAEC,QAAQ,CAAC;IAChD,IAAIC,gBAAgB,EAAE;MAAEA,gBAAgB,CAAC,CAAC,CAAC;;IAC3C,OAAOE,OAAO,CAACC,OAAO,CAACF,OAAO,CAAC;;EAGnC,IAAIV,gBAAgB,CAACO,IAAI,CAAC,EAAE;IACxB,OAAON,eAAe,CAACM,IAAI,EAAEC,QAAQ,EAAEC,gBAAgB,CAAC;;EAG5D,OAAOE,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC3D;AAEA,SAASC,qBAAqBA,CAACR,IAAY,EAAEC,QAAwB;EACjE,IAAIT,iBAAiB,CAACQ,IAAI,CAAC,EAAE;IACzB,OAAOV,gBAAgB,CAACU,IAAI,EAAEC,QAAQ,CAAC;;EAG3C,IAAIR,gBAAgB,CAACO,IAAI,CAAC,EAAE;IACxB,OAAOJ,mBAAmB,CAACI,IAAI,EAAEC,QAAQ,CAAC;;EAG9C,MAAM,IAAIM,KAAK,CAAC,qBAAqB,CAAC;AAC1C;AAEA,SACIjB,gBAAgB,EAEhBI,eAAe,EACfE,mBAAmB,EACnBE,eAAe,EAEfN,iBAAiB,EACjBC,gBAAgB,EAChBF,oBAAoB,EAEpBQ,iBAAiB,EACjBS,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}